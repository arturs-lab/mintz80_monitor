# File C:\zeus\mintz80_monitor\ymztest_2000.asm
2000 3E 10       FA00	ld a,$10	; frequency source
2002 D3 04       	out (04),a
2004 3E 01       	ld a,$1	; freq divider
2006 D3 05       	out (05),a
2008 3E 00       	ld a,$0	; cpu frequency
200A D3 D0       	out ($d0),a
200C 3E E2       	ld a,$e2		; playback speed
200E 32 4F 20    	ld (PBSPEED),a
2011 C3 B6 21    	jp	FBA5		; initialize note pointers and start playing
2014 21 13 C2 11 12 FA 01 2C 01 ED B0 C9 FA03	DB	$21,$13,$C2,$11,$12,$FA,$01,$2C,$01,$ED,$B0,$C9
2020 0F          FA0F	DB	$0F
2021 0F 0F       FA10	DB	$0F,$0F ; channel 1 frequency
2023 A8 01       FA12	DB	$A8,$01	; channel 2
2025 9F 06       FA14	DB	$9F,$06	; channel 3
2027 3D 01       FA16	DB	$3D,$01 
2029 1E          RNOISEP	DB	$1E
202A FB          RENABLE	DB	$FB
202B 00 00 0F    RAMPLIT	DB	$00,$00,$0F
202E 00 00       RENVPER	DB	$00,$00
2030 00          RENVSHAP	DB	$00
2031 10          FA20	DB	$10
2032 00 00 00    FA21	DB	$00,$00,$00
2035 00 00 00    FA24	DB	$00,$00,$00 
2038 00          FA27	DB	$00
2039 00 00 00 00 00 00 FA28	DB	$00,$00,$00,$00,$00,$00
203F 00 25       CHAMUSICPTR	DW	MUSIC1	; channel A music data address, $EA60
2041 01 25       	DW	MUSIC1+1
2043 E8 28       CHBMUSICPTR	DW	MUSIC2	; channel B music data address, $EE48
2045 E9 28       	DW	MUSIC2+1
2047 D0 2C       CHCMUSICPTR	DW	MUSIC3	; channel C music data address, $F230
2049 D1 2C       	DW	MUSIC3+1
204B B8 30       FA3A	DB	XTRA,XTRA>>8	; some other table, 1000 bytes up from $F23C, CHCMUSICPTR, should be $F618 per new locations
204D B9 30       	DW	XTRA+1
204F F3          PBSPEED	DB	$f3	;$E6	; playback speed @CPU CLK: 2MHz->$f3, 4MHz->$e2
2050 08 07 06 05 06 07 08 09 0A 0B 0B 0B 0B 0B 0B 0B FA3F	DB	$08,$07,$06,$05,$06,$07,$08,$09,$0A,$0B,$0B,$0B,$0B,$0B,$0B,$0B
2060 0F 0E 0D 0C 0B 0A 09 08 07 06 05 04 03 02 01 00 	DB	$0F,$0E,$0D,$0C,$0B,$0A,$09,$08,$07,$06,$05,$04,$03,$02,$01,$00
2070 0F 0E 0D 0C 0B 0A 09 08 08 09 0A 0B 0C 0D 0E 0F 	DB	$0F,$0E,$0D,$0C,$0B,$0A,$09,$08,$08,$09,$0A,$0B,$0C,$0D,$0E,$0F
2080 04 06 08 0A 0B 0C 0D 0E 0F 0E 0D 0C 0B 0A 07 03 	DB	$04,$06,$08,$0A,$0B,$0C,$0D,$0E,$0F,$0E,$0D,$0C,$0B,$0A,$07,$03
2090 08 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0B 09 08 	DB	$08,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0B,$09,$08
20A0 0B 0B 0B 0B 0B 0B 0B 0B 08 05 02 02 03 03 03 03 	DB	$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$08,$05,$02,$02,$03,$03,$03,$03
20B0 08 0B 0D 0E 0F 0F 0E 0D 0C 0B 0A 09 09 09 09 09 	DB	$08,$0B,$0D,$0E,$0F,$0F,$0E,$0D,$0C,$0B,$0A,$09,$09,$09,$09,$09
20C0 0F 00 0F 00 0F 00 0F 00 0F 00 0F 00 0F 00 0F 08 	DB	$0F,$00,$0F,$00,$0F,$00,$0F,$00,$0F,$00,$0F,$00,$0F,$00,$0F,$08
20D0 9F          N_TO_REG	DB	$9F
20D1 06 40 06 E6 05 91 05 41 05 F6 04 AE 04 6B 04 2C FAC0	DB	$06,$40,$06,$E6,$05,$91,$05,$41,$05,$F6,$04,$AE,$04,$6B,$04,$2C
20E1 04 F0 03 B7 03 82 03 4F 03 20 03 F3 02 C8 02 A1 FAD0	DB	$04,$F0,$03,$B7,$03,$82,$03,$4F,$03,$20,$03,$F3,$02,$C8,$02,$A1
20F1 02 7B 02 57 02 36 02 16 02 F8 01 DC 01 C1 01 A8 FAE0	DB	$02,$7B,$02,$57,$02,$36,$02,$16,$02,$F8,$01,$DC,$01,$C1,$01,$A8
2101 01 90 01 79 01 64 01 50 01 3D 01 2C 01 1B 01 0B FAF0	DB	$01,$90,$01,$79,$01,$64,$01,$50,$01,$3D,$01,$2C,$01,$1B,$01,$0B
2111 01 FC 00 EE 00 E0 00 D4 00 C8 00 BD 00 B2 00 A8 FB00	DB	$01,$FC,$00,$EE,$00,$E0,$00,$D4,$00,$C8,$00,$BD,$00,$B2,$00,$A8
2121 00 9F 00 96 00 8D 00 85 00 7E 00 77 00 70 00 6A FB10	DB	$00,$9F,$00,$96,$00,$8D,$00,$85,$00,$7E,$00,$77,$00,$70,$00,$6A
2131 00 64 00 5E 00 59 00 54 00 FB20	DB	$00,$64,$00,$5E,$00,$59,$00,$54,$00
213A FF FF 08 09 18 09 00 FB29	DB	$FF,$FF,$08,$09,$18,$09,$00
2141 80 1C 80 04 10 0C 10 14 10 1C 80 1E 80 00 00 FB30	DB	$80,$1C,$80,$04,$10,$0C,$10,$14,$10,$1C,$80,$1E,$80,$00,$00 
2150 00 00 00 00 00 00 FB3F	DB	$00,$00,$00,$00,$00,$00 
2156 CD 62 21    FB45	call	FB51	; play notes for all channels?
2159 CD 0C 24    	call	rtrn		; $28E	;poll keyboard
215C 1C          	inc	e
215D 28 F7       	jr	z,FB45	; continue loop
215F C3 D8 21    	jp	FBC7	; unless key pressed - then exit
2162 F3          FB51	di			; make sure interrupts turned off
2163 21 2A 20    	ld	hl,RENABLE	; set enable register to all channels disabled + noise off
2166 06 FF       	ld	b,$FF
2168 70          	ld	(hl),b
2169 23          	inc	hl		; point at RAMPLIT
216A 04          	inc	b		; then set amplitudes to 0
216B CD E9 22    	call	FCD9		; store B -> (HL) 3 times incrementing HL each time
216E 21 31 20    	ld	hl,FA20	; zero 
2171 70          	ld	(hl),b
2172 23          	inc	hl
2173 CD E9 22    	call	FCD9		; store B -> (HL) 3 times incrementing HL each time
2176 21 38 20    	ld	hl,FA27	; zero
2179 70          	ld	(hl),b
217A 23          	inc	hl
217B CD E9 22    	call	FCD9		; store B -> (HL) 3 times incrementing HL each time
217E 23          	inc	hl
217F CD E9 22    	call	FCD9		; store B -> (HL) 3 times incrementing HL each time
2182 21 4B 20    	ld	hl,NOISPTR	; get noise?
2185 CD E0 21    	call	FBD0		; get reg value
2188 CD AD 22    	call	FC9D		; process it
218B 21 3F 20    	ld	hl,CHAMUSICPTR	; channel A music data address
218E CD E0 21    	call	FBD0		; get note and reg value
2191 3E 01       	ld	a,$01		; channel number
2193 CD 04 22    	call	FBF4
2196 21 43 20    	ld	hl,CHBMUSICPTR	; channel B music data address
2199 CD E0 21    	call	FBD0		; get note and reg value
219C 3E 02       	ld	a,$02		; channel number
219E CD 04 22    	call	FBF4
21A1 21 47 20    	ld	hl,CHCMUSICPTR	; channel C music data address
21A4 CD E0 21    	call	FBD0		; get note and reg value
21A7 3E 03       	ld	a,$03		; channel number
21A9 CD 04 22    	call	FBF4
21AC CD 25 23    	call	FD15
21AF CD D6 23    	call	AYSETREG
21B2 CD 82 22    	call	FC72
21B5 C9          	ret
21B6 21 00 25    FBA5	ld	hl,MUSIC1	; EA60 location of music
21B9 11 3F 20    	ld	de,CHAMUSICPTR	; 
21BC 01 E8 03    	ld	bc,$03E8	; 1000 decimal - length of channel data
21BF CD CE 21    	call	FBBD		; store location of data for channel A - EA60 -> FA2E
21C2 CD CE 21    	call	FBBD		; store location of data for channel B - EE48 -> FA32
21C5 CD CE 21    	call	FBBD		; store location of data for channel C - F230 -> FA36
21C8 CD CE 21    	call	FBBD		; store location of data for noise? - F618 -> FA3A
21CB C3 56 21    	jp	FB45		; start playing
21CE 7D          FBBD	ld	a,l
21CF 12          	ld	(de),a
21D0 13          	inc	de
21D1 7C          	ld	a,h
21D2 12          	ld	(de),a
21D3 13          	inc	de
21D4 09          	add	hl,bc
21D5 13          	inc	de
21D6 13          	inc	de
21D7 C9          	ret
21D8 16 07       FBC7	ld	d,$07	; Write FF to register 7 - disable all channels. Should be 3F to not turn on output on IO ports
21DA 1E FF       	ld	e,$FF
21DC CD C8 23    	call	AYWRITE
21DF C9          	ret		; exit
21E0 5E          FBD0	ld	e,(hl)	; HL points to address of current note pointer
21E1 23          	inc	hl	; load that pointer into DE
21E2 56          	ld	d,(hl)
21E3 13          	inc	de	; point to next note
21E4 1A          FBD4	ld	a,(de)	; get sample
21E5 FE 3F       	cp	$3F	; check if loop command 'b'
21E7 CA FB 21    	jp	z,FBEB	; jump if loop command
21EA 47          	ld	b,a	; save current note in B
21EB 72          	ld	(hl),d	; save current note pointer
21EC 2B          	dec	hl
21ED 73          	ld	(hl),e
21EE 87          	add	a,a	; note * 2
21EF 5F          	ld	e,a	; turn it into offset to 16 bit table
21F0 16 00       	ld	d,$00
21F2 21 D0 20    	ld	hl,N_TO_REG	; get address of beginning of note to reg value map
21F5 19          	add	hl,de		; add offset
21F6 56          	ld	d,(hl)		; get value from table
21F7 23          	inc	hl
21F8 5E          	ld	e,(hl)
21F9 EB          	ex	de,hl		; put it in HL
21FA C9          	ret
21FB 23          FBEB	inc	hl	; after current sample register we have loop dest address register
21FC 5E          	ld	e,(hl)	; get that address
21FD 23          	inc	hl
21FE 56          	ld	d,(hl)
21FF 2B          	dec	hl	; then point back to current sample
2200 2B          	dec	hl
2201 C3 E4 21    	jp	FBD4	; and continue loop
2204 4F          FBF4	ld	c,a		; save channel number in C for later
2205 78          	ld	a,b		; get note number
2206 FE 36       	cp	$36		; is it valid range? $36 or less?
2208 30 3F       	jr	nc,FC39	; no, it's percussion or noisse?
220A 3E FF       	ld	a,$FF		; is H = $FF ?
220C BC          	cp	h
220D C8          	ret	z		; return if so
220E 79          	ld	a,c		; get channel number
220F E5          	push	hl		; save HL for later - contains register value for note
2210 87          	add	a,a		; 16 bit offset to channel data
2211 3D          	dec	a
2212 21 23 20    	ld	hl,FA12	; point to table, counting from A=1 to 3, so 1,3 or 5
2215 16 00       	ld	d,$00
2217 5F          	ld	e,a
2218 19          	add	hl,de		; add 16 bit offset, results in fa11, fa13 or fa15 - starting with MSB
2219 D1          	pop	de		; get note register value
221A 73          	ld	(hl),e		; store DE in table
221B 2B          	dec	hl
221C 72          	ld	(hl),d
221D 21 35 20    	ld	hl,FA24	; point to table
2220 16 00       	ld	d,$00
2222 59          	ld	e,c		; load channel number
2223 19          	add	hl,de		; add 8 bit offset - 1
2224 2B          	dec	hl
2225 7E          	ld	a,(hl)		; get value
2226 2B          	dec	hl
2227 2B          	dec	hl
2228 2B          	dec	hl
2229 77          	ld	(hl),a		; store in corresponding address of table at FA21
222A 21 20 20    	ld	hl,FA0F	; point to table
222D 19          	add	hl,de		; DE = channel number
222E 2B          	dec	hl
222F 7E          	ld	a,(hl)		; get amplitude value
2230 21 2A 20    	ld	hl,RENABLE	; select amplitude shadow table
2233 19          	add	hl,de		; add offset to channel
2234 77          	ld	(hl),a		; store amplitude value
2235 21 2A 20    	ld	hl,RENABLE	; select channel enable shadow reg
2238 0D          	dec	c		; decrement channel number
2239 C2 3E 22    	jp	nz,FC2E		; skip if not zero
223C CB 86       	res	0,(hl)		; if 0 turn on channel A in channel enable shadow reg
223E 0D          FC2E	dec	c		; decrement channel number
223F C2 44 22    	jp	nz,FC34		; skip if not zero
2242 CB 8E       	res	1,(hl)		; if 0 turn on channel B in channel enable shadow reg
2244 0D          FC34	dec	c		; decrement channel number
2245 C0          	ret	nz		; skip if not zero
2246 CB 96       	res	2,(hl)		; if 0 turn on channel C in channel enable shadow reg
2248 C9          	ret
2249 7C          FC39	ld	a,h
224A 32 29 20    	ld	(RNOISEP),a	; put H in noise period shadow reg
224D 7D          	ld	a,l
224E E6 F0       	and	$F0
2250 FE 00       	cp	$00
2252 28 1F       	jr	z,FC63		; jump if upper nibble of L is 0
2254 0F          	rrca
2255 0F          	rrca
2256 0F          	rrca
2257 0F          	rrca
2258 21 32 20    FC48	ld	hl,FA21	; point to table
225B 16 00       	ld	d,$00		; add offset
225D 59          	ld	e,c
225E 19          	add	hl,de
225F 2B          	dec	hl
2260 77          	ld	(hl),a		; store in table
2261 21 2A 20    	ld	hl,RENABLE
2264 0D          	dec	c
2265 20 03       	jr	nz,FC5A
2267 CB 9E       	res	3,(hl)		; if 0 turn on noise A in channel enable shadow reg
2269 C9          	ret
226A 0D          FC5A	dec	c
226B 20 03       	jr	nz,FC60
226D CB A6       	res	4,(hl)		; if 0 turn on noise B in channel enable shadow reg
226F C9          	ret
2270 CB AE       FC60	res	5,(hl)		; if 0 turn on noise C in channel enable shadow reg
2272 C9          	ret
2273 7D          FC63	ld	a,l		; get lower nibble of L
2274 E6 0F       	and	$0F
2276 21 2B 20    	ld	hl,RAMPLIT	; point to amplitude shadow registers
2279 16 00       	ld	d,$00
227B 59          	ld	e,c
227C 19          	add	hl,de		; add offset to register in question
227D 2B          	dec	hl
227E 77          	ld	(hl),a		; set amplitude
227F AF          	xor	a		; zero A
2280 18 D6       	jr	FC48		; loop back
2282 3E 01       FC72	ld	a,$01		; channel A
2284 CD E5 23    	call	FDD5
2287 3E 02       	ld	a,$02		; channel B
2289 CD E5 23    	call	FDD5
228C 3E 03       	ld	a,$03		; channel C
228E CD E5 23    	call	FDD5
2291 CD D6 23    	call	AYSETREG		; send shadow values to AY regs
2294 3A 4F 20    	ld	a,(PBSPEED)	; get playback speed
2297 06 32       FC87	ld	b,$32		; delay loop
2299 00          FC89	nop
229A 10 FD       	djnz	FC89
229C 3C          	inc	a
229D 20 F8       	jr	nz,FC87
229F CD A5 23    	call	UPDPERVAL	; update 3 channel period values from table at $FA28
22A2 21 31 20    	ld	hl,FA20	; increment $FA20 counter
22A5 34          	inc	(hl)
22A6 7E          	ld	a,(hl)
22A7 FE 10       	cp	$10		; did it reach $10?
22A9 C8          	ret	z		; yes, return
22AA C3 82 22    	jp	FC72		; no, continue loop
22AD 78          FC9D	ld	a,b
22AE E6 03       	and	$03		; put 2 lowest bits of B in C
22B0 4F          	ld	c,a
22B1 CB 50       	bit	2,b		; bit 2 flag
22B3 20 06       	jr	nz,FCAB
22B5 CB 58       	bit	3,b		; bit 3 flag
22B7 C2 EF 22    	jp	nz,FCDF
22BA C9          	ret
22BB CB 58       FCAB	bit	3,b
22BD C2 05 23    	jp	nz,FCF5
22C0 3E F0       	ld	a,$F0		; bit 2 on bit 3 off
22C2 A0          	and	b		; get upprt nibble of B
22C3 CB 0F       	rrc	a
22C5 CB 0F       	rrc	a
22C7 CB 0F       	rrc	a
22C9 CB 0F       	rrc	a
22CB 47          	ld	b,a		; put it in B
22CC AF          	xor	a		; zero A
22CD B9          	cp	c		; is C 0?
22CE 28 0E       	jr	z,FCCE		; yes
22D0 21 20 20    	ld	hl,FA0F	; no, point to 
22D3 16 00       	ld	d,$00
22D5 59          	ld	e,c
22D6 19          	add	hl,de		; add offset
22D7 2B          	dec	hl
22D8 70          	ld	(hl),b		; put upper nibble of B in table
22D9 06 00       	ld	b,$00
22DB C3 15 23    	jp	FD05
22DE 21 20 20    FCCE	ld	hl,FA0F	; C was 0, point to 
22E1 CD E9 22    	call	FCD9		; Store B in 3 channel shadow regs
22E4 06 00       	ld	b,$00
22E6 C3 1F 23    	jp	FD0F
22E9 70          FCD9	ld	(hl),b		; store B in 3 channels
22EA 23          	inc	hl
22EB 70          	ld	(hl),b
22EC 23          	inc	hl
22ED 70          	ld	(hl),b
22EE C9          	ret
22EF 79          FCDF	ld	a,c		; bit 2 off, bit 3 on
22F0 32 50 21    	ld	(FB3F),a	; put lowest 2 bits of B in FB3F
22F3 3E F0       	ld	a,$F0
22F5 A0          	and	b		; get high nibble
22F6 07          	rlca
22F7 07          	rlca
22F8 07          	rlca
22F9 CB 60       	bit	4,b
22FB 47          	ld	b,a
22FC 28 03       	jr	z,FCF1
22FE EE 7F       	xor	$7F
2300 3C          	inc	a
2301 32 38 20    FCF1	ld	(FA27),a
2304 C9          	ret
2305 CB 60       FCF5	bit	4,b		; bit 2 on, bit 3 on
2307 C0          	ret	nz
2308 3E E0       	ld	a,$E0		; get 3 highest bits of B
230A A0          	and	b
230B 07          	rlca
230C CB 07       	rlc	a
230E CB 07       	rlc	a
2310 47          	ld	b,a		; put 3 highest bits in bottom
2311 AF          	xor	a		; zero A
2312 B9          	cp	c		; is C 0?
2313 28 0A       	jr	z,FD0F		; yes
2315 16 00       FD05	ld	d,$00		; no, use it as offset to FA24 table
2317 59          	ld	e,c
2318 21 35 20    	ld	hl,FA24
231B 19          	add	hl,de
231C 2B          	dec	hl
231D 70          	ld	(hl),b		; put 3 highest bits of B in table
231E C9          	ret
231F 21 35 20    FD0F	ld	hl,FA24	; point to FA24 table
2322 C3 E9 22    	jp	FCD9		; sotre B in 3 channels
2325 21 38 20    FD15	ld	hl,FA27	; point to FA27 table
2328 AF          	xor	a
2329 BE          	cp	(hl)		; is it 0 ?
232A C8          	ret	z		; yes, done
232B 46          	ld	b,(hl)		; no , load it into B
232C 3A 50 21    	ld	a,(FB3F)	; load A from F3BF
232F FE 00       	cp	$00
2331 28 20       	jr	z,FD43		; skip if 0
2333 DD 21 23 20 	ld	ix,RTPERIOD	; period of channel A
2337 21 3F 20    	ld	hl,CHAMUSICPTR	; pointer to channel A music
233A 3D          	dec	a
233B CA 6E 23    	jp	z,FD5E		; skip if 0
233E 21 43 20    	ld	hl,CHBMUSICPTR
2341 DD 23       	inc	ix
2343 DD 23       	inc	ix		; period of channel B
2345 3D          	dec	a
2346 CA 6E 23    	jp	z,FD5E		; skip if 0
2349 21 47 20    	ld	hl,CHCMUSICPTR
234C DD 23       	inc	ix
234E DD 23       	inc	ix		; period of channel C
2350 C3 6E 23    	jp	FD5E		; jump to FD5E
2353 21 3F 20    FD43	ld	hl,CHAMUSICPTR	; pointer to channel A music
2356 DD 21 23 20 	ld	ix,RTPERIOD	; period of channel A
235A CD 6E 23    	call	FD5E
235D DD 23       	inc	ix
235F DD 23       	inc	ix		; period of channel B
2361 21 43 20    	ld	hl,CHBMUSICPTR	; channel B
2364 CD 6E 23    	call	FD5E
2367 DD 23       	inc	ix
2369 DD 23       	inc	ix		; period of channel C
236B 21 47 20    	ld	hl,CHCMUSICPTR	; channel C
236E 5E          FD5E	ld	e,(hl)		; get current note from music
236F 23          	inc	hl
2370 56          	ld	d,(hl)
2371 1A          	ld	a,(de)
2372 80          	add	a,b		; add B
2373 FE 35       	cp	$35
2375 D0          	ret	nc		; return if A <= $35 (53 dec)
2376 16 00       	ld	d,$00
2378 87          	add	a,a
2379 5F          	ld	e,a		; DE = 2 * A
237A 21 D0 20    	ld	hl,N_TO_REG	; point to $FABF table
237D 19          	add	hl,de
237E 5E          	ld	e,(hl)
237F 23          	inc	hl
2380 56          	ld	d,(hl)		; get 16 bit value
2381 DD 6E 00    	ld	l,(ix+$00)	; get current period for channel
2384 DD 66 01    	ld	h,(ix+$01)
2387 EB          	ex	de,hl
2388 AF          	xor	a		; clear C flag
2389 ED 52       	sbc	hl,de		; subtract value from current period
238B 7D          	ld	a,l		; switch bytes
238C 6C          	ld	l,h
238D 67          	ld	h,a
238E AF          	xor	a
238F C5          	push	bc
2390 06 04       	ld	b,$04
2392 EE 00       FD82	xor	$00		; divide HL by 16 ?
2394 CB 1C       	rr	h
2396 CB 1D       	rr	l
2398 CB 1F       	rr	a
239A 10 F6       	djnz	FD82
239C B4          	or	h
239D DD 77 16    	ld	(ix+$16),a
23A0 DD 75 17    	ld	(ix+$17),l
23A3 C1          	pop	bc
23A4 C9          	ret
23A5 21 23 20    UPDPERVAL	ld	hl,RTPERIOD
23A8 11 39 20    	ld	de,FA28
23AB 06 03       	ld	b,$03		; for 3 channels
23AD 7E          FD9D	ld	a,(hl)		; get channel period in DE
23AE E5          	push	hl
23AF 23          	inc	hl
23B0 66          	ld	h,(hl)
23B1 6F          	ld	l,a
23B2 EB          	ex	de,hl
23B3 7E          	ld	a,(hl)		; get entry from $FA28 in HL
23B4 23          	inc	hl
23B5 E5          	push	hl
23B6 66          	ld	h,(hl)
23B7 6F          	ld	l,a
23B8 19          	add	hl,de		; add DE (channel period) and HL ($FA28)
23B9 30 01       	jr	nc,FDAC
23BB 23          	inc	hl
23BC 4C          FDAC	ld	c,h
23BD 7D          	ld	a,l
23BE D1          	pop	de		; pop pointer to $FA28
23BF 13          	inc	de
23C0 E1          	pop	hl		; pop pointer to channel period
23C1 77          	ld	(hl),a		; store new value in channel period
23C2 23          	inc	hl
23C3 71          	ld	(hl),c
23C4 23          	inc	hl		; point to next channel
23C5 10 E6       	djnz	FD9D		; loop through channels
23C7 C9          	ret
23C8 C5          AYWRITE	push	bc		; write value in E to AY register given in D
23C9 01 02 00    	ld	bc,AYSEL	; AY register select
23CC ED 51       	out	(c),d
23CE 01 03 00    	ld	bc,AYDTA	; AY register value
23D1 ED 59       	out	(c),e
23D3 C1          	pop	bc
23D4 14          	inc	d		; point to next AY register
23D5 C9          	ret
23D6 21 23 20    AYSETREG	ld	hl,RTPERIOD	; set AY registers with values pointed to by HL
23D9 16 00       	ld	d,$00		; point to first AY register
23DB 06 0E       	ld	b,$0E		; count of registers to init
23DD 5E          FDCD	ld	e,(hl)		; load value to be put in register
23DE 23          	inc	hl		; point to next value
23DF CD C8 23    	call	AYWRITE		; write to reg
23E2 10 F9       	djnz	FDCD		; loop through count in B
23E4 C9          	ret
23E5 21 2B 20    FDD5	ld	hl,RAMPLIT	; point to amplitudes table
23E8 3D          	dec	a
23E9 5F          	ld	e,a
23EA 16 00       	ld	d,$00
23EC 19          	add	hl,de
23ED EB          	ex	de,hl		; DE = channel amplitude
23EE 21 07 00    	ld	hl,$0007	; add 7 to offset - that ends up being channel offset into $FA21 table
23F1 19          	add	hl,de
23F2 7E          	ld	a,(hl)		; get value
23F3 FE 00       	cp	$00
23F5 C8          	ret	z		; return if 0
23F6 D5          	push	de		; save pointer to channel amplitude
23F7 21 50 20    	ld	hl,FA3F	; 16 byte tables for each channel
23FA 3D          	dec	a		; get channel number
23FB 17          	rla
23FC 17          	rla
23FD 17          	rla
23FE 17          	rla
23FF 16 00       	ld	d,$00
2401 5F          	ld	e,a
2402 19          	add	hl,de		; HL = $FA3F + ($FA21 + CH#) * 16
2403 3A 31 20    	ld	a,(FA20)	; get offset from FA20
2406 5F          	ld	e,a
2407 19          	add	hl,de		; add offset in table for given channel
2408 7E          	ld	a,(hl)		; get value
2409 E1          	pop	hl		; get pointer to channel amplitude
240A 77          	ld	(hl),a		; put value there
240B C9          	ret
240C 1E FF       rtrn	ld e,$ff
240E CD 2A FD    	call JUMPTAB+$2a
2411 C6 FF       	add $ff
2413 5F          	ld e,a
2414 C9          	ret
2500 00 28 35 35 35 2B 35 35 28 35 28 2D 35 28 35 26 EA60	DB	$00,$28,$35,$35,$35,$2B,$35,$35,$28,$35,$28,$2D,$35,$28,$35,$26
2510 35 28 35 35 35 2F 35 35 28 35 28 30 35 2F 35 2B 	DB	$35,$28,$35,$35,$35,$2F,$35,$35,$28,$35,$28,$30,$35,$2F,$35,$2B
2520 35 28 35 2F 35 28 35 28 26 35 26 23 35 2A 35 28 	DB	$35,$28,$35,$2F,$35,$28,$35,$28,$26,$35,$26,$23,$35,$2A,$35,$28
2530 35 35 35 35 35 35 35 35 35 04 06 07 09 0B 0D 0F 	DB	$35,$35,$35,$35,$35,$35,$35,$35,$35,$04,$06,$07,$09,$0B,$0D,$0F
2540 10 04 35 35 35 10 35 35 0E 35 0E 0B 35 0E 35 10 	DB	$10,$04,$35,$35,$35,$10,$35,$35,$0E,$35,$0E,$0B,$35,$0E,$35,$10
2550 35 04 35 35 35 10 35 35 35 35 0B 0B 35 0E 35 10 	DB	$35,$04,$35,$35,$35,$10,$35,$35,$35,$35,$0B,$0B,$35,$0E,$35,$10
2560 35 07 35 35 35 0C 35 35 0E 35 0E 0B 35 0E 35 10 	DB	$35,$07,$35,$35,$35,$0C,$35,$35,$0E,$35,$0E,$0B,$35,$0E,$35,$10
2570 35 04 35 35 35 10 35 35 35 35 10 0E 35 0B 35 07 	DB	$35,$04,$35,$35,$35,$10,$35,$35,$35,$35,$10,$0E,$35,$0B,$35,$07
2580 35 04 35 35 35 10 35 35 0E 35 0E 0B 35 0E 35 10 	DB	$35,$04,$35,$35,$35,$10,$35,$35,$0E,$35,$0E,$0B,$35,$0E,$35,$10
2590 35 04 37 35 35 10 35 35 35 35 0B 0B 35 0E 35 10 	DB	$35,$04,$37,$35,$35,$10,$35,$35,$35,$35,$0B,$0B,$35,$0E,$35,$10
25A0 35 07 37 35 35 0C 35 35 0E 35 0E 0B 35 0E 35 10 	DB	$35,$07,$37,$35,$35,$0C,$35,$35,$0E,$35,$0E,$0B,$35,$0E,$35,$10
25B0 35 04 35 35 35 10 35 35 35 35 10 0E 35 0B 35 07 	DB	$35,$04,$35,$35,$35,$10,$35,$35,$35,$35,$10,$0E,$35,$0B,$35,$07
25C0 35 04 37 35 35 10 35 35 0E 35 0E 0B 35 0E 35 10 	DB	$35,$04,$37,$35,$35,$10,$35,$35,$0E,$35,$0E,$0B,$35,$0E,$35,$10
25D0 35 04 37 35 35 10 35 35 35 35 0B 0B 35 0E 35 10 	DB	$35,$04,$37,$35,$35,$10,$35,$35,$35,$35,$0B,$0B,$35,$0E,$35,$10
25E0 35 07 37 35 35 0C 35 35 0E 35 0E 0B 35 0E 35 10 	DB	$35,$07,$37,$35,$35,$0C,$35,$35,$0E,$35,$0E,$0B,$35,$0E,$35,$10
25F0 35 04 35 35 35 10 35 35 35 35 10 0E 35 0B 35 07 	DB	$35,$04,$35,$35,$35,$10,$35,$35,$35,$35,$10,$0E,$35,$0B,$35,$07
2600 35 04 37 36 35 10 35 37 0E 35 0E 0B 35 0E 35 10 	DB	$35,$04,$37,$36,$35,$10,$35,$37,$0E,$35,$0E,$0B,$35,$0E,$35,$10
2610 35 04 37 36 35 10 35 37 35 35 0B 0B 35 0E 35 10 	DB	$35,$04,$37,$36,$35,$10,$35,$37,$35,$35,$0B,$0B,$35,$0E,$35,$10
2620 35 07 37 36 35 0C 35 37 0E 35 0E 0B 35 0E 35 10 	DB	$35,$07,$37,$36,$35,$0C,$35,$37,$0E,$35,$0E,$0B,$35,$0E,$35,$10
2630 35 04 37 36 35 10 35 37 35 35 10 0E 3E 0B 35 07 	DB	$35,$04,$37,$36,$35,$10,$35,$37,$35,$35,$10,$0E,$3E,$0B,$35,$07
2640 35 04 37 36 35 10 35 37 0E 35 0E 0B 35 0E 35 10 	DB	$35,$04,$37,$36,$35,$10,$35,$37,$0E,$35,$0E,$0B,$35,$0E,$35,$10
2650 35 04 37 36 35 10 35 37 35 35 0B 0B 35 0E 35 10 	DB	$35,$04,$37,$36,$35,$10,$35,$37,$35,$35,$0B,$0B,$35,$0E,$35,$10
2660 35 07 37 36 35 0C 35 37 0E 35 0E 0B 35 0E 35 10 	DB	$35,$07,$37,$36,$35,$0C,$35,$37,$0E,$35,$0E,$0B,$35,$0E,$35,$10
2670 35 04 37 36 35 10 35 37 35 35 10 0E 3E 0B 35 07 	DB	$35,$04,$37,$36,$35,$10,$35,$37,$35,$35,$10,$0E,$3E,$0B,$35,$07
2680 35 3F       	DB	$35,$3F
28E8 35 35 1C 35 35 1C 1F 35 1F 1C 35 1C 21 21 1C 1C EE48	DB	$35,$35,$1C,$35,$35,$1C,$1F,$35,$1F,$1C,$35,$1C,$21,$21,$1C,$1C
28F8 1A 1A 1C 35 35 1C 23 35 23 1C 35 1C 24 24 23 23 	DB	$1A,$1A,$1C,$35,$35,$1C,$23,$35,$23,$1C,$35,$1C,$24,$24,$23,$23
2908 1F 1F 1C 1C 23 23 28 23 1C 1A 1C 1A 1A 17 17 1E 	DB	$1F,$1F,$1C,$1C,$23,$23,$28,$23,$1C,$1A,$1C,$1A,$1A,$17,$17,$1E
2918 1C 35 35 35 35 35 35 35 35 35 35 35 35 35 3B 3A 	DB	$1C,$35,$35,$35,$35,$35,$35,$35,$35,$35,$35,$35,$35,$35,$3B,$3A
2928 3A 35 04 35 36 35 35 35 37 35 35 0E 35 0B 35 0E 	DB	$3A,$35,$04,$35,$36,$35,$35,$35,$37,$35,$35,$0E,$35,$0B,$35,$0E
2938 35 10 04 35 36 35 35 35 37 35 35 35 35 0B 35 0E 	DB	$35,$10,$04,$35,$36,$35,$35,$35,$37,$35,$35,$35,$35,$0B,$35,$0E
2948 35 10 07 35 36 35 35 35 37 35 35 0E 35 0B 35 0E 	DB	$35,$10,$07,$35,$36,$35,$35,$35,$37,$35,$35,$0E,$35,$0B,$35,$0E
2958 35 10 04 35 36 35 35 35 37 35 3E 35 0E 3E 0B 3E 	DB	$35,$10,$04,$35,$36,$35,$35,$35,$37,$35,$3E,$35,$0E,$3E,$0B,$3E
2968 07 39 1C 35 36 3E 1F 35 37 1C 38 38 21 3E 1C 3E 	DB	$07,$39,$1C,$35,$36,$3E,$1F,$35,$37,$1C,$38,$38,$21,$3E,$1C,$3E
2978 1A 39 1C 35 36 3E 23 35 37 1C 38 38 24 3E 23 3E 	DB	$1A,$39,$1C,$35,$36,$3E,$23,$35,$37,$1C,$38,$38,$24,$3E,$23,$3E
2988 1F 39 1C 36 23 3E 28 37 37 1A 38 38 17 3E 1E 3E 	DB	$1F,$39,$1C,$36,$23,$3E,$28,$37,$37,$1A,$38,$38,$17,$3E,$1E,$3E
2998 1C 39 37 35 36 3E 35 35 37 35 35 3E 0E 3E 0B 3E 	DB	$1C,$39,$37,$35,$36,$3E,$35,$35,$37,$35,$35,$3E,$0E,$3E,$0B,$3E
29A8 35 39 1C 35 36 3E 1F 35 37 1C 38 38 21 3E 1C 3E 	DB	$35,$39,$1C,$35,$36,$3E,$1F,$35,$37,$1C,$38,$38,$21,$3E,$1C,$3E
29B8 1A 39 1C 35 36 3E 23 35 37 1C 38 38 24 3E 23 3E 	DB	$1A,$39,$1C,$35,$36,$3E,$23,$35,$37,$1C,$38,$38,$24,$3E,$23,$3E
29C8 1F 39 1C 36 23 3E 28 37 37 1A 38 38 17 3E 1E 3E 	DB	$1F,$39,$1C,$36,$23,$3E,$28,$37,$37,$1A,$38,$38,$17,$3E,$1E,$3E
29D8 1C 39 37 35 36 3E 35 35 37 35 35 3E 0E 3E 0B 3E 	DB	$1C,$39,$37,$35,$36,$3E,$35,$35,$37,$35,$35,$3E,$0E,$3E,$0B,$3E
29E8 07 39 04 23 28 3E 28 23 37 2B 38 38 0B 3E 2A 3E 	DB	$07,$39,$04,$23,$28,$3E,$28,$23,$37,$2B,$38,$38,$0B,$3E,$2A,$3E
29F8 2A 39 35 23 28 3E 28 23 37 2B 38 38 2A 3E 28 3E 	DB	$2A,$39,$35,$23,$28,$3E,$28,$23,$37,$2B,$38,$38,$2A,$3E,$28,$3E
2A08 35 39 07 1F 24 3E 24 1F 37 0E 38 38 0B 3E 35 3E 	DB	$35,$39,$07,$1F,$24,$3E,$24,$1F,$37,$0E,$38,$38,$0B,$3E,$35,$3E
2A18 10 39 26 23 28 3E 28 23 37 23 38 3E 0E 3E 0B 3E 	DB	$10,$39,$26,$23,$28,$3E,$28,$23,$37,$23,$38,$3E,$0E,$3E,$0B,$3E
2A28 07 39 35 23 28 3E 28 23 37 2B 38 38 0B 3E 2A 3E 	DB	$07,$39,$35,$23,$28,$3E,$28,$23,$37,$2B,$38,$38,$0B,$3E,$2A,$3E
2A38 2A 39 35 23 28 3E 28 23 37 2B 38 38 2A 3E 28 3E 	DB	$2A,$39,$35,$23,$28,$3E,$28,$23,$37,$2B,$38,$38,$2A,$3E,$28,$3E
2A48 35 39 35 1F 24 3E 24 1F 37 0E 38 38 0B 3E 35 3E 	DB	$35,$39,$35,$1F,$24,$3E,$24,$1F,$37,$0E,$38,$38,$0B,$3E,$35,$3E
2A58 26 39 26 23 28 3E 28 23 37 23 38 3E 0E 3E 0B 3E 	DB	$26,$39,$26,$23,$28,$3E,$28,$23,$37,$23,$38,$3E,$0E,$3E,$0B,$3E
2A68 07 3F       	DB	$07,$3F
2CD0 1C 1C 35 1C 1C 1F 1C 1F 1C 1F 1C 21 1C 1C 21 1A F230	DB	$1C,$1C,$35,$1C,$1C,$1F,$1C,$1F,$1C,$1F,$1C,$21,$1C,$1C,$21,$1A
2CE0 1C 1C 1C 1C 1C 23 1C 23 1C 23 1C 24 1C 23 24 1F 	DB	$1C,$1C,$1C,$1C,$1C,$23,$1C,$23,$1C,$23,$1C,$24,$1C,$23,$24,$1F
2CF0 23 1C 1F 23 1C 28 23 1C 1A 1C 1A 17 17 1E 1E 1C 	DB	$23,$1C,$1F,$23,$1C,$28,$23,$1C,$1A,$1C,$1A,$17,$17,$1E,$1E,$1C
2D00 1E 1C 1C 1C 1C 1C 1C 1C 1C 3D 3D 3C 3C 3B 35 35 	DB	$1E,$1C,$1C,$1C,$1C,$1C,$1C,$1C,$1C,$3D,$3D,$3C,$3C,$3B,$35,$35
2D10 35 39 37 36 35 35 10 37 35 0E 35 35 0B 35 0E 35 	DB	$35,$39,$37,$36,$35,$35,$10,$37,$35,$0E,$35,$35,$0B,$35,$0E,$35
2D20 10 39 37 36 35 35 10 37 35 35 35 35 0B 35 0E 35 	DB	$10,$39,$37,$36,$35,$35,$10,$37,$35,$35,$35,$35,$0B,$35,$0E,$35
2D30 10 39 37 36 35 35 0C 37 35 0E 35 35 0B 35 0E 35 	DB	$10,$39,$37,$36,$35,$35,$0C,$37,$35,$0E,$35,$35,$0B,$35,$0E,$35
2D40 10 39 37 36 35 35 10 37 35 35 35 10 3E 0E 3E 0B 	DB	$10,$39,$37,$36,$35,$35,$10,$37,$35,$35,$35,$10,$3E,$0E,$3E,$0B
2D50 3E 1C 37 36 35 1F 10 37 1C 0E 1C 21 0B 1C 0E 1A 	DB	$3E,$1C,$37,$36,$35,$1F,$10,$37,$1C,$0E,$1C,$21,$0B,$1C,$0E,$1A
2D60 10 1C 04 36 35 23 10 37 1C 35 1C 24 0B 23 0E 1F 	DB	$10,$1C,$04,$36,$35,$23,$10,$37,$1C,$35,$1C,$24,$0B,$23,$0E,$1F
2D70 10 1C 07 23 36 28 0C 1C 1A 0E 1A 17 0B 1E 0E 1C 	DB	$10,$1C,$07,$23,$36,$28,$0C,$1C,$1A,$0E,$1A,$17,$0B,$1E,$0E,$1C
2D80 10 35 04 36 35 35 10 37 35 35 3E 10 3E 0E 3E 0B 	DB	$10,$35,$04,$36,$35,$35,$10,$37,$35,$35,$3E,$10,$3E,$0E,$3E,$0B
2D90 3E 1C 04 36 35 1F 10 37 1C 0E 1C 21 0B 1C 0E 1A 	DB	$3E,$1C,$04,$36,$35,$1F,$10,$37,$1C,$0E,$1C,$21,$0B,$1C,$0E,$1A
2DA0 10 1C 04 36 35 23 10 37 1C 35 1C 24 0B 23 0E 1F 	DB	$10,$1C,$04,$36,$35,$23,$10,$37,$1C,$35,$1C,$24,$0B,$23,$0E,$1F
2DB0 10 1C 07 23 36 28 0C 1C 1A 0E 1A 17 0B 1E 0E 1C 	DB	$10,$1C,$07,$23,$36,$28,$0C,$1C,$1A,$0E,$1A,$17,$0B,$1E,$0E,$1C
2DC0 10 35 04 36 35 35 10 37 35 35 3E 10 3E 0E 3E 0B 	DB	$10,$35,$04,$36,$35,$35,$10,$37,$35,$35,$3E,$10,$3E,$0E,$3E,$0B
2DD0 3E 07 35 28 36 28 10 28 2B 0E 2B 35 2B 2A 0E 2A 	DB	$3E,$07,$35,$28,$36,$28,$10,$28,$2B,$0E,$2B,$35,$2B,$2A,$0E,$2A
2DE0 10 35 04 28 36 28 10 28 2B 35 2B 2A 0B 28 0E 35 	DB	$10,$35,$04,$28,$36,$28,$10,$28,$2B,$35,$2B,$2A,$0B,$28,$0E,$35
2DF0 10 35 35 24 36 24 0C 24 35 24 26 35 26 35 0E 26 	DB	$10,$35,$35,$24,$36,$24,$0C,$24,$35,$24,$26,$35,$26,$35,$0E,$26
2E00 35 26 04 28 36 28 10 28 35 26 28 35 28 35 3E 35 	DB	$35,$26,$04,$28,$36,$28,$10,$28,$35,$26,$28,$35,$28,$35,$3E,$35
2E10 3E 35 04 28 36 28 10 28 2B 0E 2B 35 2B 2A 0E 2A 	DB	$3E,$35,$04,$28,$36,$28,$10,$28,$2B,$0E,$2B,$35,$2B,$2A,$0E,$2A
2E20 10 35 04 28 36 28 10 28 2B 35 2B 2A 0B 28 0E 35 	DB	$10,$35,$04,$28,$36,$28,$10,$28,$2B,$35,$2B,$2A,$0B,$28,$0E,$35
2E30 10 35 07 24 36 24 0C 24 35 24 26 35 26 35 0E 26 	DB	$10,$35,$07,$24,$36,$24,$0C,$24,$35,$24,$26,$35,$26,$35,$0E,$26
2E40 10 26 04 28 36 28 10 28 35 26 28 10 28 35 3E 35 	DB	$10,$26,$04,$28,$36,$28,$10,$28,$35,$26,$28,$10,$28,$35,$3E,$35
2E50 3E 3F       	DB	$3E,$3F
30B8 6D EF CE 57 00 EF 57 00 EF 57 EF 00 57 EF 57 EF 57 EF 57 00 	DB	$6D,$EF,$CE,$57,$00,$EF,$57,$00,$EF,$57,$EF,$00,$57,$EF,$57,$EF,$57,$EF,$57,$00
30CC 00 EF 57 00 EF 57 EF 00 57 EF 57 EF 57 EF 57 EF 	DB	$00,$EF,$57,$00,$EF,$57,$EF,$00,$57,$EF,$57,$EF,$57,$EF,$57,$EF
30DC 57 EF 57 EF 00 57 EF 00 57 EF 57 EF 57 44 00 00 	DB	$57,$EF,$57,$EF,$00,$57,$EF,$00,$57,$EF,$57,$EF,$57,$44,$00,$00
30EC 00 34 00 00 75 49 29 49 49 49 49 29 EC 	DB	$00,$34,$00,$00,$75,$49,$29,$49,$49,$49,$49,$29,$EC
3239 3F          XTRAEND	DB	$3f
# End of file C:\zeus\mintz80_monitor\ymztest_2000.asm
